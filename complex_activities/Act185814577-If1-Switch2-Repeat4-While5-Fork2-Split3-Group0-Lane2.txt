@startuml
|1| mqwmnf
|2| ncaavw
|1|
start
repeat
backward:xbmgqp;
:qcgstoplvl; <<procedure>>
while (bsgeyxxveafs?) is (kdja)
backward:jtulqr;
:qzyhj;
backward:qdfpgt;
:bwlth;
endwhile (upsm)
:feictnsa;
:dovnmk;
if (ymaatef) then (ourf)
:eaptvd;
break
endif
->mfzx;
:gegovz;
repeat while (xefwjujdfsto?) is (ylup)
split
:hmbqc;
split again
while (crkeelgejwco?) is (nhjs)
backward:omvdxe;
backward:xhnwvj;
backward:uhlbpb;
backward:dsjopr;
endwhile (zbtt)
:wvdavsgg;
split again
split
:tafir;
split again
:dhonipgcvk;
-> yclpkn;
split again
:xcmjw;
end split
split again
:mqmmpv;
while (frtswxhzgvyx?) is (rgby)
backward:vfcvby;
backward:qjtmjt;
:splhyohavw;
endwhile (ttvo)
-[hidden]->
detach
end split
fork
:zytmb;
fork again
:berzqitkoa; <<input>>
fork again
repeat
:ieueu;
repeat while (ubscncxtoxjb?) is (vsnc)
fork again
fork
:xxcen;
fork again
:yoamnnpwlz;
-> qcbsts;
fork again
:xclfl;
fork again
:tzbrh;
fork again
:idubj;
fork again
:wzbfd;
end fork
fork again
if (giqmmqeuklzg?) then (tukf)
:zrppdkrnld; <<task>>
else (vbxu)
:riicpnpsic; <<save>>
:lbsjedvvqb;
-> ewehhg;
:hpkcyiqsli;
endif
fork again
:serupuxbqn;
-> qtclce;
end fork
|2|
:udauondssk;
:cwdcnfbfsw; <<continuous>>
|1|
:whwonhaait; <<task>>
repeat
repeat
backward:ebghsn;
:xraje;
backward:uxmwax;
repeat while (wcnzvjtkosdw?) is (qnct)
backward:ukbjzb;
:bgqlpo;
if (vghyafl) then (bthc)
:mmhmfq;
break
endif
->cuzv;
:dvhvym;
repeat while (xkmuqymcrgrx?) is (azru)
switch (lorvofgyisyo?)
case (tndxjmb?)
:mpmerpxiao; <<output>>
case (ajzqlgy?)
:bavsohedwk; <<task>>
case (nlngaaj?)
:ezstiyqlpe;
endswitch
switch (tpchvlbadrhq?)
case (vdsaubc?)
:zgztupkucj; <<task>>
case (bclpiee?)
:yyoziucjbw;
case (ifpmown?)
split
:kllfi;
split again
:hjeleylqlp;
split again
:mtubr;
split again
:fscccn;
while (lgoxgjxtpjmc?) is (kblq)
:iqaptxhzpj;
:ynzlx;
backward:ytzegq;
backward:kpghpf;
endwhile (qmrd)
-[hidden]->
detach
end split
case (vlefxik?)
while (yffirxuwfuzr?) is (grbh)
:jclernypck;
-> afaefm;
endwhile (audh)
:rfolpaoi;
case (gtxoedp?)
:qcevvmiexd; <<load>>
endswitch
end
@enduml